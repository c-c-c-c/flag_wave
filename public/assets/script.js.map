{"version":3,"sources":["../../src/script/script.js"],"names":["scene","THREE","Scene","plane","controls","renderer","camera","model","SEGX","SEGY","startTime","Date","renderFlag","light","ambient","width","height","modelPath","DirectionalLight","position","set","add","PerspectiveCamera","window","innerWidth","innerHeight","lookAt","Vector3","gridHelper","GridHelper","axisHelper","AxisHelper","lightHelper","DirectionalLightHelper","WebGLRenderer","antialias","setSize","setClearColor","setPixelRatio","devicePixelRatio","document","getElementById","appendChild","domElement","loader","TextureLoader","load","texture","geometry","PlaneGeometry","material","MeshBasicMaterial","map","side","DoubleSide","Mesh","render","verticesNeedUpdate","time","i","j","index","vertex","vertices","amp","z","Math","sin","console","log","requestAnimationFrame"],"mappings":"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","file":"script.js","sourcesContent":["\n\nlet scene = new THREE.Scene();\nlet plane;\nlet controls;\nlet renderer;\nlet camera;\nlet model = [];\nlet SEGX = 11;\nlet SEGY = 11;\nlet startTime = new Date();\n\n//let model = {};\n\nfunction renderFlag () {\n  'use strict';\n  let light;\n  let ambient;\n  let width = 1200;\n  let height = 1200;\n\tlet modelPath ;\n\n   //light\n\t //light = new THREE.PointLight(0xffffff,2);\n\t //light.position.set(100,0,300);\n\t //scene.add(light);\n\n  light = new THREE.DirectionalLight(0xffffff, 1);\n  light.position.set(100, 0, 300);\n  scene.add(light);\n/*\n  ambient = new THREE.AmbientLight(0x404040);\n  scene.add(ambient);\n*/\n\t//camera\n  //camera = new THREE.PerspectiveCamera(45, width /　height, 1 , 1000);\n\tcamera = new THREE.PerspectiveCamera(60, window.innerWidth/window.innerHeight, 0.1, 14000);\n\tcamera.position.set(0,0,1000);\n  camera.lookAt(new THREE.Vector3(0,0,0));\n\n//  camera.position.set(0, 400, 300);\n//  camera.lookAt(scene.position);\n\n  // helper 現在は非表示\n  let gridHelper = new THREE.GridHelper(200, 50);\n  scene.add(gridHelper);\n  let axisHelper = new THREE.AxisHelper(1000);\n  scene.add(axisHelper);\n  let lightHelper = new THREE.DirectionalLightHelper(light , 20)\n  scene.add(lightHelper);\n\n  //controls\n  //controls = new THREE.OrbitControls(camera);\n  //cameraの自動回転\n//  controls.autoRotate = true;\n  //controls.autoRotateSpeed = 1.5;\n\n  // renderer\n  renderer = new THREE.WebGLRenderer({ antialias: true });\n  renderer.setSize(width, height);\n  renderer.setClearColor(0xffffff);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  document.getElementById('stage').appendChild(renderer.domElement);\n\n\n\t//var texture = new THREE.TextureLoader().load(\"./public/img/italy.jpg\");\n\t//var texture = new THREE.TextureLoader().load(\"./public/img/dice.jpg\");\n\t//テクスチャ読み込み\n\tlet loader = new THREE.TextureLoader();\n\t//let texture=loader.load('./public/img/dice.jpg');\n\tloader.load('./public/img/italy.jpg', (texture) => {\n\t\tlet geometry = new THREE.PlaneGeometry(973, 703, SEGX, SEGY);\n\t\tlet material = new THREE.MeshBasicMaterial({map:texture, side: THREE.DoubleSide} );\n\t\t//let material = new THREE.MeshBasicMaterial( {color: 0xffff00, side: THREE.DoubleSide} );\n\t\t//var material = new THREE.MeshBasicMaterial( {color: 0xffff00, side: THREE.DoubleSide} );\n\t\t//var material = new THREE.MeshBasicMaterial( {color: 0xffff00, side: THREE.DoubleSide} );\n\t\tplane = new THREE.Mesh(geometry, material);\n\t\tscene.add(plane);\n  \trender();\n\t});\n\n\t//console.log(texture);\n\t//texture.needsUpdate = true;\n\n//\tvar geometry = new THREE.PlaneGeometry(1300, 1228, SEGX, SEGY);\n}\n\nfunction render () {\n\n\tplane.geometry.verticesNeedUpdate=true;//これを忘れずに書く\n\tlet time = (new Date() - startTime)/1000;\n\n\tfor (let i=0;i<SEGX+1;i++) {\n\t\tfor (let j=0;j<SEGY+1;j++) {\n\t\t\t//(i,j)のvertexを得る\n\t\t\tlet index = j * (SEGX + 1) + i % (SEGX + 1);\n\t\t\tlet vertex = plane.geometry.vertices[index];\n\t\t\t//時間経過と頂点の位置によって波を作る\n\t\t\tlet amp=100;//振幅\n\t\t\tvertex.z = amp * Math.sin( -i/2 + time*10 );\n\n\t\t\tconsole.log(vertex.z);\n\t\t}\n\t}\n\n  requestAnimationFrame(render);\n\t//controls.update();\n  renderer.render(scene, camera);\n}\n\nrenderFlag();\n"]}